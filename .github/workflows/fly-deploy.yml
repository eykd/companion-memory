# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: Fly Deploy
on:
  push:
    branches:
      - main
jobs:
  ci:
    # This workflow will install Python dependencies, run tests and
    # lint with a variety of Python versions For more information see:
    # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.13"]

    env:
      PYTHONDONTWRITEBYTECODE: "1"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install & configure uv
      run: |
        python -m pip install uv
    - uses: actions/cache@v3
      name: Define a cache for the virtual environment based on the dependencies lock file
      id: poetry-cache
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-venv-${{ hashFiles(uv.lock') }}
          ${{ runner.os }}-venv-
    - name: Install dependencies
      run: |
        python -m uv sync --with=test
    - name: Test with pytest
      run: |
        sh scripts/fulltests.sh

  deploy:
    name: Deploy app
    needs: ci
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    concurrency:
      group: deploy
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
